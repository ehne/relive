"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[392],{4970:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return c},default:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),s=["components"],o={sidebar_position:2},l="Fundamentals",d={unversionedId:"quickstart/fundamentals",id:"quickstart/fundamentals",isDocsHomePage:!1,title:"Fundamentals",description:"The basic idea behind Relive is that you are given object data and frame data, and from there can do anything you want with the blank React canvas.",source:"@site/docs/quickstart/fundamentals.md",sourceDirName:"quickstart",slug:"/quickstart/fundamentals",permalink:"/relive/docs/quickstart/fundamentals",editUrl:"https://github.com/ehne/relive/edit/master/packages/docs/docs/quickstart/fundamentals.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Setup and Installation",permalink:"/relive/docs/quickstart/installing"}},c=[{value:"Concepts and Key Terms",id:"concepts-and-key-terms",children:[]},{value:"Registering Scenes",id:"registering-scenes",children:[]},{value:"Adding Controls",id:"adding-controls",children:[]}],u={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"fundamentals"},"Fundamentals"),(0,i.kt)("p",null,"The basic idea behind Relive is that you are given object data and frame data, and from there can do anything you want with the blank React canvas."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react'\nimport { useRelive } from '@relivecg/core'\n\nexport const HelloWorld = () => {\n  const { data, currentFrame, frameLastUpdated } = useRelive()\n  return (\n    <div>\n      current frame: {currentFrame} <br/>\n      rame last updated: {frameLastUpdated} <br/>\n      data: {JSON.stringify(data)}\n    </div>\n  )\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"data")," is an object containing all information for that scene. We'll get to how this works a bit later."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"currentFrame")," is the current animation frame. It begins counting as soon as the scene's page is loaded, and resets when the page is reloaded."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"frameLastUpdated")," is the frame on when the ",(0,i.kt)("inlineCode",{parentName:"li"},"data")," object was last changed. Just like ",(0,i.kt)("inlineCode",{parentName:"li"},"currentFrame")," it resets when the page is reloaded.")),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"data"),' object is only updated when you press the "send" button on that scene\'s controller.'))),(0,i.kt)("h2",{id:"concepts-and-key-terms"},"Concepts and Key Terms"),(0,i.kt)("p",null,"In Relive, to keep everything orderly, there are a number of key terms used to describe different elements of the system."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},'"Scene"')," describes the component that uses the ",(0,i.kt)("inlineCode",{parentName:"p"},"useRelive()")," hook. That is, a scene is what will be used as an overlay in your broadcasting software of choice."),(0,i.kt)("p",null,"Each scene has its own ",(0,i.kt)("strong",{parentName:"p"},'"Controller"'),". That's what's shown on your computer and allows you to change the data and send it to the scenes. Each controller consists of a bunch of ",(0,i.kt)("strong",{parentName:"p"},'"Controls"'),", which are the individual input rows."),(0,i.kt)("p",null,"Then there's the ",(0,i.kt)("strong",{parentName:"p"},"remote"),". That's what shows up when you go to the address that the CLI tells you to go to. It has controllers for all scenes that have been registered with Relive in ",(0,i.kt)("inlineCode",{parentName:"p"},"index.jsx"),"."),(0,i.kt)("h2",{id:"registering-scenes"},"Registering Scenes"),(0,i.kt)("p",null,"Before a scene shows up in Relive and can be interacted with, you need to register it. That is done with the ",(0,i.kt)("inlineCode",{parentName:"p"},"registerRelive()")," function."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{15-19}","{15-19}":!0},"import React from 'react'\nimport { useRelive, registerRelive } from '@relivecg/core'\n\nexport const HelloWorld = () => {\n  const { data, currentFrame, frameLastUpdated } = useRelive()\n  return (\n    <div>\n      current frame: {currentFrame} <br/>\n      frame last updated: {frameLastUpdated} <br/>\n      data: {JSON.stringify(data)}\n    </div>\n  )\n}\n\nregisterRelive({\n  'scene name': {\n    component: HelloWorld\n  }\n})\n")),(0,i.kt)("p",null,"If you run this, you will see the following on your remote:"),(0,i.kt)("p",null,"// image"),(0,i.kt)("h2",{id:"adding-controls"},"Adding Controls"),(0,i.kt)("p",null,"What we've got going is great and all, but it doesn't have any data passing into it. We can fix that by adding a control. Let's go with a basic ",(0,i.kt)("inlineCode",{parentName:"p"},"stringControl"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{8-10}","{8-10}":!0},"import { useRelive, registerRelive, stringControl } from '@relive/core'\n\n// ...\n\nregisterRelive({\n  'scene name': {\n    component: HelloWorld,\n    controls: {\n      ... stringControl('name')\n    }\n  }\n})\n")))}m.isMDXComponent=!0}}]);